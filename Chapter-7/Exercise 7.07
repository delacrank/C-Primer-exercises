#include <iostream>
#include <string>

struct Sales_data { // define structure for our program
    Sales_data& combine(const Sales_data&);
    std::string isbn() const { return bookNo; }
    
    std::string bookNo; // book ID or isbn
    unsigned units_sold = 0; // amount of books
    double revenue = 0.0; // total price of books
};

Sales_data& Sales_data::combine(const Sales_data &rhs)
{
    units_sold += rhs.units_sold; // add existing units to new ones
    revenue += rhs.revenue; // add existing price total to new total
    return *this; // return these values
}

std::istream &read(std::istream &in, Sales_data &item)
{
    double price = 0;
    in >> item.bookNo >> item.units_sold >> price;
    item.revenue = price * item.units_sold;
    return in;
}

std::ostream &print(std::ostream &out, const Sales_data &item)
{
    out << item.isbn() << " " << item.units_sold << " " 
        << item.revenue;
    return out;
}

Sales_data add(const Sales_data &left, const Sales_data &right)
{
    Sales_data sum = left;
    sum.combine(right);
    return sum;
}
    
int main()
{
    Sales_data total;
    if(read(std::cin, total))
    {
        Sales_data trans;
        while(read(std::cin, trans)) 
        {
            if(total.isbn() == trans.isbn())
                total.combine(trans);
            else
            {
                print(std::cout, total) << std::endl;
                total = trans;
            }
        }
        print (std::cout, total) << std::endl;
    } else {
        std::cerr << "no data?!" << std::endl;
    }
}
